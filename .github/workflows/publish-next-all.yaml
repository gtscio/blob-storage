name: Publish Next All Packages

on: workflow_dispatch

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    if: github.ref != 'refs/heads/main'

    services:
      ipfs:
        image: ipfs/kubo:latest
        ports:
          - 4001:4001
          - 4001:4001/udp
          - 8080:8080
          - 5001:5001
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
          - 4571:4571
        env:
          AWS_DEFAULT_REGION: eu-central-1
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          SERVICES: s3
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite:latest
        ports:
          - 10000:10000
        env:
          AZURITE_ACCOUNTS: testAccount:testKey

    strategy:
      max-parallel: 1
      matrix:
        package:
          [
            'packages/blob-storage-models',
            'packages/blob-storage-connector-memory',
            'packages/blob-storage-connector-file',
            'packages/blob-storage-connector-ipfs',
            'packages/blob-storage-service',
            'packages/blob-storage-rest-client',
            'packages/blob-storage-connector-aws-s3',
            'packages/blob-storage-connector-gcp',
            'packages/blob-storage-connector-azure'
          ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: next

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      # TODO: Remove once we have a way to pass flags (-scheme http) and run it in the services section
      - name: Start GCP Storage Emulator
        run: >-
          docker run -d
          -p 4443:4443
          --name gcp-storage-emulator
          fsouza/fake-gcs-server:latest
          -scheme http

      - name: Remove Mono-Repo Node Modules
        run: |
          rm package.json
          rm package-lock.json

      - name: Check package version contains -next
        run: |
          cd ${{ matrix.package }}
          PACKAGE_VERSION=$(cat package.json | jq '.version' | tr -d '"')
          echo Package Version $PACKAGE_VERSION
          if [[ $PACKAGE_VERSION != *"-next"* ]]; then
            echo "Error: package version does not contain -next"
            exit 1
          fi

      - name: Run Dist
        run: |
          cd ${{ matrix.package }}
          npm install
          npm run dist

      - name: Cleanup package properties
        run: |
          cd ${{ matrix.package }}
          npm pkg delete scripts
          npm pkg delete devDependencies

      - name: Publish
        run: |
          cd ${{ matrix.package }}
          npm publish --provenance --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
